services:
  server:
    container_name: server
    build:
      target: run
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    networks:
      - app-networks
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/about.json || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20

  client_mobile:
    container_name: client_mobile
    build:
      target: build-apk
      dockerfile: mobile/Dockerfile
    volumes:
      - shared_apk:/app/public/apk
    networks:
      - app-networks

  client_web:
    container_name: client_web
    build:
      target: run
      dockerfile: frontend/Dockerfile
    environment:
      - PORT=8081
    ports:
      - "8081:8081"
    volumes:
      - shared_apk:/app/public/apk
    networks:
      - app-networks
    depends_on:
      client_mobile:
        condition: service_started
      server:
        condition: service_healthy

  database:
    image: postgres:13
    container_name: database
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: area-database
      POSTGRES_USER: admin
      DB_HOST: postgres
    volumes:
      - database-data:/var/lib/postgresql/data
    networks:
      - app-networks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d area-database"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  database-data:
  shared_apk:

networks:
  app-networks:
