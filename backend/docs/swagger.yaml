basePath: /api/v1
definitions:
  schemas.JWT:
    properties:
      token:
        type: string
    type: object
  schemas.Response:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  title: Area API
paths:
  /auth/token:
    post:
      description: Authenticates a user and provides a JWT to Authorize API calls
      operationId: Authentication
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Provides a JSON Web Token
  /github/auth:
    get:
      consumes:
      - application/json
      description: give url to authenticate with github
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: give url to authenticate with github
      tags:
      - github route
  /ping:
    get:
      consumes:
      - application/json
      description: do ping to check if the server is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: ping example
      tags:
      - ping route
  /spotify/auth:
    get:
      consumes:
      - application/json
      description: give url to authenticate with spotify
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: give url to authenticate with spotify
      tags:
      - spotify route
  /spotify/auth/callback:
    get:
      consumes:
      - application/json
      description: give user info of spotify
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: give user info of spotify
      tags:
      - spotify route
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization.
    type: apiKey
swagger: "2.0"
