definitions:
  schemas.AuthenticationUrl:
    properties:
      authentication_url:
        type: string
    type: object
  schemas.CodeCredentials:
    properties:
      code:
        type: string
    type: object
  schemas.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  schemas.JWT:
    properties:
      token:
        type: string
    type: object
  schemas.Response:
    properties:
      message:
        type: string
    type: object
  schemas.UserCredentials:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /action/info/{id}:
    get:
      consumes:
      - application/json
      description: get action info of service id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - Bearer: []
      summary: get action info
      tags:
      - Action
  /area/:
    post:
      consumes:
      - application/json
      description: create area
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: create area
      tags:
      - Area
  /github/auth:
    get:
      consumes:
      - application/json
      description: give url to authenticate with github
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuthenticationUrl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with github
      tags:
      - Github
  /github/auth/callback:
    post:
      consumes:
      - application/json
      description: give url to authenticate with github
      parameters:
      - description: Callback Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/schemas.CodeCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with github
      tags:
      - Github
  /github/info/user:
    get:
      consumes:
      - application/json
      description: give user info of github
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserCredentials'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - Bearer: []
      summary: give user info of github
      tags:
      - Github
  /gmail/auth:
    get:
      consumes:
      - application/json
      description: give url to authenticate with gmail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuthenticationUrl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with gmail
      tags:
      - Gmail
  /gmail/auth/callback:
    post:
      consumes:
      - application/json
      description: give url to authenticate with gmail
      parameters:
      - description: Callback Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/schemas.CodeCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with gmail
      tags:
      - Gmail
  /gmail/info/user:
    get:
      consumes:
      - application/json
      description: give user info of gmail
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserCredentials'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - Bearer: []
      summary: give user info of gmail
      tags:
      - Gmail
  /ping:
    get:
      consumes:
      - application/json
      description: do ping to check if the server is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: ping example
      tags:
      - ping route
  /spotify/auth:
    get:
      consumes:
      - application/json
      description: give url to authenticate with spotify
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuthenticationUrl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with spotify
      tags:
      - Spotify
  /spotify/auth/callback:
    post:
      consumes:
      - application/json
      description: give url to authenticate with spotify
      parameters:
      - description: Callback Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/schemas.CodeCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: give url to authenticate with spotify
      tags:
      - Spotify
  /spotify/info/user:
    get:
      consumes:
      - application/json
      description: give user info of spotify
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserCredentials'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - Bearer: []
      summary: give user info of spotify
      tags:
      - Spotify
  /user/info/user:
    get:
      consumes:
      - application/json
      description: give user info of user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserCredentials'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - Bearer: []
      summary: give user info of user
      tags:
      - User
  /user/login:
    post:
      description: Authenticates a user and provides a JWT to Authorize API calls
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Provides a JSON Web Token
      tags:
      - User
  /user/register:
    post:
      description: Authenticates a user and provides a JWT to Authorize API calls
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JWT'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Provides a JSON Web Token
      tags:
      - User
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization.
    type: apiKey
swagger: "2.0"
