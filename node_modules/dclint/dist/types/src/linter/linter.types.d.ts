interface LintContext {
    path: string;
    content: object;
    sourceCode: string;
}
interface LintMessage {
    rule: string;
    type: LintMessageType;
    severity: LintRuleSeverity;
    category: LintRuleCategory;
    message: string;
    line: number;
    column: number;
    endLine?: number;
    endColumn?: number;
    meta?: RuleMeta;
    fixable: boolean;
}
interface LintResult {
    filePath: string;
    messages: LintMessage[];
    errorCount: number;
    warningCount: number;
    fixableErrorCount?: number;
    fixableWarningCount?: number;
}
interface RuleMeta {
    description: string;
    url: string;
}
interface LintRule {
    name: string;
    type: LintMessageType;
    meta: RuleMeta;
    category: LintRuleCategory;
    severity: LintRuleSeverity;
    fixable: boolean;
    getMessage(details?: object): string;
    check(content: object, type?: LintMessageType): LintMessage[];
    fix?(content: string): string;
}
type LintMessageType = 'warning' | 'error';
type LintRuleSeverity = 'info' | 'minor' | 'major' | 'critical';
type LintRuleCategory = 'style' | 'security' | 'best-practice' | 'performance';
export { LintContext, LintMessage, LintResult, LintRule, RuleMeta, LintMessageType, LintRuleSeverity, LintRuleCategory, };
